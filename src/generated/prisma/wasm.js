
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.13.0
 * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
 */
Prisma.prismaVersion = {
  client: "6.13.0",
  engine: "361e86d0ea4987e9f53a565309b3eed797a6bcbd"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  birthday: 'birthday',
  address: 'address',
  phone: 'phone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PrimaryProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profileId: 'profileId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceMemberScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  userId: 'userId',
  profileId: 'profileId',
  inviterId: 'inviterId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkspaceOwnerScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  workspaceMemberId: 'workspaceMemberId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  location: 'location',
  businessNumber: 'businessNumber',
  managementNumber: 'managementNumber',
  employeeCount: 'employeeCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdBy: 'createdBy'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  id: 'id',
  talentPoolId: 'talentPoolId',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DayLaborerScalarFieldEnum = {
  id: 'id',
  talentPoolId: 'talentPoolId',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OwnerScalarFieldEnum = {
  id: 'id',
  employeeId: 'employeeId',
  companyId: 'companyId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectOwnerScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  name: 'name',
  address: 'address',
  phone: 'phone',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SiteScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  projectId: 'projectId',
  companyId: 'companyId',
  name: 'name',
  location: 'location',
  startDate: 'startDate',
  endDate: 'endDate',
  managementNumber: 'managementNumber',
  memo: 'memo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SiteAttendanceScalarFieldEnum = {
  id: 'id',
  talentPoolId: 'talentPoolId',
  siteId: 'siteId',
  date: 'date',
  startTime: 'startTime',
  endTime: 'endTime',
  amount: 'amount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TalentPoolScalarFieldEnum = {
  id: 'id',
  workspaceId: 'workspaceId',
  profileId: 'profileId',
  name: 'name',
  birthday: 'birthday',
  phone: 'phone',
  address: 'address',
  memo: 'memo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IndustrialAccidentInsurancePremiumRateScalarFieldEnum = {
  id: 'id',
  firstLevel: 'firstLevel',
  firstLevelCode: 'firstLevelCode',
  secondLevel: 'secondLevel',
  secondLevelCode: 'secondLevelCode',
  industryName: 'industryName',
  industryCode: 'industryCode',
  date: 'date',
  rate: 'rate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompanyIndustryCodeScalarFieldEnum = {
  id: 'id',
  companyId: 'companyId',
  industryCode: 'industryCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.InvitationType = exports.$Enums.InvitationType = {
  PUBLIC: 'PUBLIC',
  PRIVATE: 'PRIVATE'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  PrimaryProfile: 'PrimaryProfile',
  Workspace: 'Workspace',
  WorkspaceMember: 'WorkspaceMember',
  WorkspaceOwner: 'WorkspaceOwner',
  Company: 'Company',
  Employee: 'Employee',
  DayLaborer: 'DayLaborer',
  Owner: 'Owner',
  ProjectOwner: 'ProjectOwner',
  Project: 'Project',
  Site: 'Site',
  SiteAttendance: 'SiteAttendance',
  TalentPool: 'TalentPool',
  IndustrialAccidentInsurancePremiumRate: 'IndustrialAccidentInsurancePremiumRate',
  CompanyIndustryCode: 'CompanyIndustryCode'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\K\\Desktop\\nomu.com\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\K\\Desktop\\nomu.com\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.13.0",
  "engineVersion": "361e86d0ea4987e9f53a565309b3eed797a6bcbd",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"../src/generated/prisma\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id               Int               @id @default(autoincrement())\n  email            String            @unique\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  primaryProfile   PrimaryProfile?\n  profiles         Profile[]\n  workspaceMembers WorkspaceMember[]\n}\n\nmodel Profile {\n  id               Int               @id @default(autoincrement())\n  userId           Int?\n  name             String\n  birthday         DateTime?\n  address          String?\n  phone            String?\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  user             User?             @relation(fields: [userId], references: [id])\n  talentPools      TalentPool[]\n  primaryProfile   PrimaryProfile?\n  workspaceMembers WorkspaceMember[]\n}\n\nmodel PrimaryProfile {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  profileId Int\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  profile   Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)\n\n  @@unique([userId])\n  @@unique([profileId])\n}\n\nmodel Workspace {\n  id               Int               @id @default(autoincrement())\n  name             String\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  companies        Company[]\n  sites            Site[]\n  talentPools      TalentPool[]\n  workspaceMembers WorkspaceMember[]\n  workspaceOwners  WorkspaceOwner[]\n  projects         Project[]\n}\n\nmodel WorkspaceMember {\n  id               Int               @id @default(autoincrement())\n  workspaceId      Int\n  userId           Int\n  profileId        Int\n  inviterId        Int?\n  createdAt        DateTime          @default(now())\n  updatedAt        DateTime          @updatedAt\n  workspace        Workspace         @relation(fields: [workspaceId], references: [id])\n  user             User              @relation(fields: [userId], references: [id])\n  profile          Profile           @relation(fields: [profileId], references: [id])\n  inviter          WorkspaceMember?  @relation(\"InvitedBy\", fields: [inviterId], references: [id], onDelete: Cascade)\n  owners           WorkspaceOwner[]\n  companiesCreated Company[]\n  invitedMembers   WorkspaceMember[] @relation(\"InvitedBy\")\n\n  @@unique([workspaceId, userId])\n}\n\nmodel WorkspaceOwner {\n  id                Int             @id @default(autoincrement())\n  workspaceId       Int\n  workspaceMemberId Int\n  createdAt         DateTime        @default(now())\n  updatedAt         DateTime        @updatedAt\n  workspace         Workspace       @relation(fields: [workspaceId], references: [id])\n  workspaceMember   WorkspaceMember @relation(fields: [workspaceMemberId], references: [id])\n}\n\nmodel Company {\n  id                   Int                   @id @default(autoincrement())\n  workspaceId          Int\n  name                 String\n  location             String\n  businessNumber       String?\n  managementNumber     String?\n  employeeCount        Int                   @default(0)\n  createdAt            DateTime              @default(now())\n  updatedAt            DateTime              @updatedAt\n  workspace            Workspace             @relation(fields: [workspaceId], references: [id])\n  companyIndustryCodes CompanyIndustryCode[]\n  dayLaborers          DayLaborer[]\n  employees            Employee[]\n  owners               Owner[]\n  sites                Site[]\n  createdBy            Int\n  createdByMember      WorkspaceMember       @relation(fields: [createdBy], references: [id])\n}\n\nmodel Employee {\n  id           Int        @id @default(autoincrement())\n  talentPoolId Int\n  companyId    Int\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  company      Company    @relation(fields: [companyId], references: [id])\n  talentPool   TalentPool @relation(fields: [talentPoolId], references: [id])\n  owners       Owner[]\n}\n\nmodel DayLaborer {\n  id           Int        @id @default(autoincrement())\n  talentPoolId Int\n  companyId    Int\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  company      Company    @relation(fields: [companyId], references: [id])\n  talentPool   TalentPool @relation(fields: [talentPoolId], references: [id])\n}\n\nmodel Owner {\n  id         Int      @id @default(autoincrement())\n  employeeId Int\n  companyId  Int\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n  company    Company  @relation(fields: [companyId], references: [id])\n  employee   Employee @relation(fields: [employeeId], references: [id])\n}\n\nmodel ProjectOwner {\n  id        Int      @id @default(autoincrement())\n  projectId Int\n  name      String\n  address   String\n  phone     String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n  project   Project  @relation(fields: [projectId], references: [id])\n}\n\nmodel Project {\n  id            Int            @id @default(autoincrement())\n  workspaceId   Int\n  name          String\n  createdAt     DateTime       @default(now())\n  updatedAt     DateTime       @updatedAt\n  workspace     Workspace      @relation(fields: [workspaceId], references: [id])\n  projectOwners ProjectOwner[]\n  sites         Site[]\n}\n\nmodel Site {\n  id               Int              @id @default(autoincrement())\n  workspaceId      Int\n  projectId        Int?\n  companyId        Int\n  name             String\n  location         String\n  startDate        DateTime\n  endDate          DateTime\n  managementNumber String?\n  memo             String?\n  createdAt        DateTime         @default(now())\n  updatedAt        DateTime         @updatedAt\n  workspace        Workspace        @relation(fields: [workspaceId], references: [id])\n  company          Company          @relation(fields: [companyId], references: [id])\n  project          Project?         @relation(fields: [projectId], references: [id])\n  siteAttendances  SiteAttendance[]\n}\n\nmodel SiteAttendance {\n  id           Int        @id @default(autoincrement())\n  talentPoolId Int\n  siteId       Int\n  date         DateTime\n  startTime    DateTime\n  endTime      DateTime\n  amount       Int\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime   @updatedAt\n  site         Site       @relation(fields: [siteId], references: [id])\n  talentPool   TalentPool @relation(fields: [talentPoolId], references: [id])\n}\n\nmodel TalentPool {\n  id              Int              @id @default(autoincrement())\n  workspaceId     Int\n  profileId       Int?\n  name            String\n  birthday        DateTime\n  phone           String\n  address         String\n  memo            String?\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n  workspace       Workspace        @relation(fields: [workspaceId], references: [id])\n  profile         Profile?         @relation(fields: [profileId], references: [id])\n  employees       Employee[]\n  dayLaborers     DayLaborer[]\n  siteAttendances SiteAttendance[]\n}\n\nmodel IndustrialAccidentInsurancePremiumRate {\n  id                   Int                   @id @default(autoincrement())\n  firstLevel           String?\n  firstLevelCode       Int?\n  secondLevel          String?\n  secondLevelCode      Int?\n  industryName         String?\n  industryCode         Int?\n  date                 String?\n  rate                 Int?\n  createdAt            DateTime              @default(now())\n  updatedAt            DateTime              @updatedAt\n  companyIndustryCodes CompanyIndustryCode[]\n}\n\nmodel CompanyIndustryCode {\n  id                                     Int                                    @id @default(autoincrement())\n  companyId                              Int\n  industryCode                           Int\n  createdAt                              DateTime                               @default(now())\n  updatedAt                              DateTime                               @updatedAt\n  company                                Company                                @relation(fields: [companyId], references: [id])\n  industrialAccidentInsurancePremiumRate IndustrialAccidentInsurancePremiumRate @relation(fields: [industryCode], references: [id])\n}\n\nenum InvitationType {\n  PUBLIC\n  PRIVATE\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  DECLINED\n}\n",
  "inlineSchemaHash": "19cf475c96a3b24af177715634ee9e4511a259c54e847d29579da261ea8bd606",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"primaryProfile\",\"kind\":\"object\",\"type\":\"PrimaryProfile\",\"relationName\":\"PrimaryProfileToUser\"},{\"name\":\"profiles\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"},{\"name\":\"workspaceMembers\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"UserToWorkspaceMember\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"},{\"name\":\"talentPools\",\"kind\":\"object\",\"type\":\"TalentPool\",\"relationName\":\"ProfileToTalentPool\"},{\"name\":\"primaryProfile\",\"kind\":\"object\",\"type\":\"PrimaryProfile\",\"relationName\":\"PrimaryProfileToProfile\"},{\"name\":\"workspaceMembers\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"ProfileToWorkspaceMember\"}],\"dbName\":null},\"PrimaryProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PrimaryProfileToUser\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"PrimaryProfileToProfile\"}],\"dbName\":null},\"Workspace\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToWorkspace\"},{\"name\":\"sites\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"SiteToWorkspace\"},{\"name\":\"talentPools\",\"kind\":\"object\",\"type\":\"TalentPool\",\"relationName\":\"TalentPoolToWorkspace\"},{\"name\":\"workspaceMembers\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"WorkspaceToWorkspaceMember\"},{\"name\":\"workspaceOwners\",\"kind\":\"object\",\"type\":\"WorkspaceOwner\",\"relationName\":\"WorkspaceToWorkspaceOwner\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToWorkspace\"}],\"dbName\":null},\"WorkspaceMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inviterId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"WorkspaceToWorkspaceMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToWorkspaceMember\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToWorkspaceMember\"},{\"name\":\"inviter\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"InvitedBy\"},{\"name\":\"owners\",\"kind\":\"object\",\"type\":\"WorkspaceOwner\",\"relationName\":\"WorkspaceMemberToWorkspaceOwner\"},{\"name\":\"companiesCreated\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToWorkspaceMember\"},{\"name\":\"invitedMembers\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"InvitedBy\"}],\"dbName\":null},\"WorkspaceOwner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceMemberId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"WorkspaceToWorkspaceOwner\"},{\"name\":\"workspaceMember\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"WorkspaceMemberToWorkspaceOwner\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"managementNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employeeCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"CompanyToWorkspace\"},{\"name\":\"companyIndustryCodes\",\"kind\":\"object\",\"type\":\"CompanyIndustryCode\",\"relationName\":\"CompanyToCompanyIndustryCode\"},{\"name\":\"dayLaborers\",\"kind\":\"object\",\"type\":\"DayLaborer\",\"relationName\":\"CompanyToDayLaborer\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"owners\",\"kind\":\"object\",\"type\":\"Owner\",\"relationName\":\"CompanyToOwner\"},{\"name\":\"sites\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"CompanyToSite\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdByMember\",\"kind\":\"object\",\"type\":\"WorkspaceMember\",\"relationName\":\"CompanyToWorkspaceMember\"}],\"dbName\":null},\"Employee\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"talentPoolId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToEmployee\"},{\"name\":\"talentPool\",\"kind\":\"object\",\"type\":\"TalentPool\",\"relationName\":\"EmployeeToTalentPool\"},{\"name\":\"owners\",\"kind\":\"object\",\"type\":\"Owner\",\"relationName\":\"EmployeeToOwner\"}],\"dbName\":null},\"DayLaborer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"talentPoolId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToDayLaborer\"},{\"name\":\"talentPool\",\"kind\":\"object\",\"type\":\"TalentPool\",\"relationName\":\"DayLaborerToTalentPool\"}],\"dbName\":null},\"Owner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"employeeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToOwner\"},{\"name\":\"employee\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToOwner\"}],\"dbName\":null},\"ProjectOwner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectOwner\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"ProjectToWorkspace\"},{\"name\":\"projectOwners\",\"kind\":\"object\",\"type\":\"ProjectOwner\",\"relationName\":\"ProjectToProjectOwner\"},{\"name\":\"sites\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"ProjectToSite\"}],\"dbName\":null},\"Site\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"managementNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"SiteToWorkspace\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToSite\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToSite\"},{\"name\":\"siteAttendances\",\"kind\":\"object\",\"type\":\"SiteAttendance\",\"relationName\":\"SiteToSiteAttendance\"}],\"dbName\":null},\"SiteAttendance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"talentPoolId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"siteId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"site\",\"kind\":\"object\",\"type\":\"Site\",\"relationName\":\"SiteToSiteAttendance\"},{\"name\":\"talentPool\",\"kind\":\"object\",\"type\":\"TalentPool\",\"relationName\":\"SiteAttendanceToTalentPool\"}],\"dbName\":null},\"TalentPool\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"workspaceId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthday\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"workspace\",\"kind\":\"object\",\"type\":\"Workspace\",\"relationName\":\"TalentPoolToWorkspace\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToTalentPool\"},{\"name\":\"employees\",\"kind\":\"object\",\"type\":\"Employee\",\"relationName\":\"EmployeeToTalentPool\"},{\"name\":\"dayLaborers\",\"kind\":\"object\",\"type\":\"DayLaborer\",\"relationName\":\"DayLaborerToTalentPool\"},{\"name\":\"siteAttendances\",\"kind\":\"object\",\"type\":\"SiteAttendance\",\"relationName\":\"SiteAttendanceToTalentPool\"}],\"dbName\":null},\"IndustrialAccidentInsurancePremiumRate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstLevelCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"secondLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secondLevelCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"industryName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industryCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rate\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyIndustryCodes\",\"kind\":\"object\",\"type\":\"CompanyIndustryCode\",\"relationName\":\"CompanyIndustryCodeToIndustrialAccidentInsurancePremiumRate\"}],\"dbName\":null},\"CompanyIndustryCode\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"industryCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToCompanyIndustryCode\"},{\"name\":\"industrialAccidentInsurancePremiumRate\",\"kind\":\"object\",\"type\":\"IndustrialAccidentInsurancePremiumRate\",\"relationName\":\"CompanyIndustryCodeToIndustrialAccidentInsurancePremiumRate\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

